{
  "eventID": "9cccfef1b2e64e7ba09120418acd402f",
  "dist": null,
  "userReport": null,
  "projectID": "1855811",
  "previousEventID": null,
  "message": "",
  "id": "9cccfef1b2e64e7ba09120418acd402f",
  "size": 20065,
  "errors": [],
  "culprit": "/template-error/",
  "title": "NoReverseMatch: Reverse for 'nope' not found. 'nope' is not a valid view function or pattern name.",
  "sdkUpdates": [],
  "platform": "python",
  "location": "django/urls/resolvers.py",
  "nextEventID": null,
  "type": "error",
  "metadata": {
    "function": "_reverse_with_prefix",
    "type": "NoReverseMatch",
    "value": "Reverse for 'nope' not found. 'nope' is not a valid view function or pattern name.",
    "filename": "django/urls/resolvers.py"
  },
  "groupingConfig": {
    "enhancements": "eJybzDhxY3J-bm5-npWRgaGlroGxrpHxBABcTQcY",
    "id": "newstyle:2019-10-29"
  },
  "crashFile": null,
  "tags": [
    { "value": "Firefox 72.0", "key": "browser", "_meta": null },
    { "value": "Firefox", "key": "browser.name", "_meta": null },
    { "value": "Ubuntu", "key": "client_os.name", "_meta": null },
    { "value": "no", "key": "handled", "_meta": null },
    { "value": "error", "key": "level", "_meta": null },
    { "value": "django", "key": "mechanism", "_meta": null },
    { "value": "CPython 3.8.1", "key": "runtime", "_meta": null },
    { "value": "CPython", "key": "runtime.name", "_meta": null },
    { "value": "210ecca56d59", "key": "server_name", "_meta": null },
    {
      "value": "054a97f6e65b4b00a4f44c7befe60632",
      "key": "trace",
      "_meta": null
    },
    {
      "value": "054a97f6e65b4b00a4f44c7befe60632-91c32e43e3ca1f52",
      "key": "trace.ctx",
      "_meta": null
    },
    { "value": "91c32e43e3ca1f52", "key": "trace.span", "_meta": null },
    { "value": "/template-error/", "key": "transaction", "_meta": null },
    {
      "value": "http://localhost:8001/template-error/",
      "key": "url",
      "_meta": null
    }
  ],
  "dateCreated": "2020-01-11T17:04:31.306588Z",
  "dateReceived": "2020-01-11T17:04:31.672903Z",
  "user": null,
  "entries": [
    {
      "type": "exception",
      "data": {
        "values": [
          {
            "stacktrace": {
              "frames": [
                {
                  "function": "inner",
                  "errors": null,
                  "colNo": null,
                  "vars": {
                    "get_response": "<bound method BaseHandler._get_response of <django.core.handlers.wsgi.WSGIHandler object at 0x7fc4b9f92580>>",
                    "request": "<WSGIRequest: GET '/template-error/'>",
                    "exc": "NoReverseMatch(\"Reverse for 'nope' not found. 'nope' is not a valid view function or pattern name.\")"
                  },
                  "package": null,
                  "absPath": "/usr/local/lib/python3.8/site-packages/django/core/handlers/exception.py",
                  "inApp": false,
                  "lineNo": 34,
                  "module": "django.core.handlers.exception",
                  "filename": "django/core/handlers/exception.py",
                  "platform": null,
                  "instructionAddr": null,
                  "context": [
                    [
                      29,
                      "    can rely on getting a response instead of an exception."
                    ],
                    [30, "    \"\"\""],
                    [31, "    @wraps(get_response)"],
                    [32, "    def inner(request):"],
                    [33, "        try:"],
                    [34, "            response = get_response(request)"],
                    [35, "        except Exception as exc:"],
                    [
                      36,
                      "            response = response_for_exception(request, exc)"
                    ],
                    [37, "        return response"],
                    [38, "    return inner"],
                    [39, ""]
                  ],
                  "symbolAddr": null,
                  "trust": null,
                  "symbol": null,
                  "rawFunction": null
                },
                {
                  "function": "_get_response",
                  "errors": null,
                  "colNo": null,
                  "vars": {
                    "resolver_match": "ResolverMatch(func=errors.views.TemplateErrorView, args=(), kwargs={}, url_name=template_error, app_names=[], namespaces=[], route=template-error/)",
                    "callback_args": [],
                    "middleware_method": "<function CsrfViewMiddleware.process_view at 0x7fc4b913b160>",
                    "self": "<django.core.handlers.wsgi.WSGIHandler object at 0x7fc4b9f92580>",
                    "request": "<WSGIRequest: GET '/template-error/'>",
                    "callback": "<function TemplateErrorView at 0x7fc4b92473a0>",
                    "wrapped_callback": "<function TemplateErrorView at 0x7fc4b92473a0>",
                    "resolver": "<URLResolver 'django_error_factory.urls' (None:None) '^/'>",
                    "callback_kwargs": {},
                    "response": "<TemplateResponse status_code=200, \"text/html; charset=utf-8\">"
                  },
                  "package": null,
                  "absPath": "/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py",
                  "inApp": false,
                  "lineNo": 145,
                  "module": "django.core.handlers.base",
                  "filename": "django/core/handlers/base.py",
                  "platform": null,
                  "instructionAddr": null,
                  "context": [
                    [140, "                    )"],
                    [141, ""],
                    [142, "            try:"],
                    [143, "                response = response.render()"],
                    [144, "            except Exception as e:"],
                    [
                      145,
                      "                response = self.process_exception_by_middleware(e, request)"
                    ],
                    [146, ""],
                    [147, "        return response"],
                    [148, ""],
                    [
                      149,
                      "    def process_exception_by_middleware(self, exception, request):"
                    ],
                    [150, "        \"\"\""]
                  ],
                  "symbolAddr": null,
                  "trust": null,
                  "symbol": null,
                  "rawFunction": null
                },
                {
                  "function": "_get_response",
                  "errors": null,
                  "colNo": null,
                  "vars": {
                    "resolver_match": "ResolverMatch(func=errors.views.TemplateErrorView, args=(), kwargs={}, url_name=template_error, app_names=[], namespaces=[], route=template-error/)",
                    "callback_args": [],
                    "middleware_method": "<function CsrfViewMiddleware.process_view at 0x7fc4b913b160>",
                    "self": "<django.core.handlers.wsgi.WSGIHandler object at 0x7fc4b9f92580>",
                    "request": "<WSGIRequest: GET '/template-error/'>",
                    "callback": "<function TemplateErrorView at 0x7fc4b92473a0>",
                    "wrapped_callback": "<function TemplateErrorView at 0x7fc4b92473a0>",
                    "resolver": "<URLResolver 'django_error_factory.urls' (None:None) '^/'>",
                    "callback_kwargs": {},
                    "response": "<TemplateResponse status_code=200, \"text/html; charset=utf-8\">"
                  },
                  "package": null,
                  "absPath": "/usr/local/lib/python3.8/site-packages/django/core/handlers/base.py",
                  "inApp": false,
                  "lineNo": 143,
                  "module": "django.core.handlers.base",
                  "filename": "django/core/handlers/base.py",
                  "platform": null,
                  "instructionAddr": null,
                  "context": [
                    [
                      138,
                      "                        \"HttpResponse object. It returned None instead.\""
                    ],
                    [
                      139,
                      "                        % (middleware_method.__self__.__class__.__name__)"
                    ],
                    [140, "                    )"],
                    [141, ""],
                    [142, "            try:"],
                    [143, "                response = response.render()"],
                    [144, "            except Exception as e:"],
                    [
                      145,
                      "                response = self.process_exception_by_middleware(e, request)"
                    ],
                    [146, ""],
                    [147, "        return response"],
                    [148, ""]
                  ],
                  "symbolAddr": null,
                  "trust": null,
                  "symbol": null,
                  "rawFunction": null
                },
                {
                  "function": "render",
                  "errors": null,
                  "colNo": null,
                  "vars": {
                    "self": "<TemplateResponse status_code=200, \"text/html; charset=utf-8\">",
                    "retval": "<TemplateResponse status_code=200, \"text/html; charset=utf-8\">"
                  },
                  "package": null,
                  "absPath": "/usr/local/lib/python3.8/site-packages/django/template/response.py",
                  "inApp": false,
                  "lineNo": 105,
                  "module": "django.template.response",
                  "filename": "django/template/response.py",
                  "platform": null,
                  "instructionAddr": null,
                  "context": [
                    [100, ""],
                    [101, "        Return the baked response instance."],
                    [102, "        \"\"\""],
                    [103, "        retval = self"],
                    [104, "        if not self._is_rendered:"],
                    [105, "            self.content = self.rendered_content"],
                    [
                      106,
                      "            for post_callback in self._post_render_callbacks:"
                    ],
                    [107, "                newretval = post_callback(retval)"],
                    [108, "                if newretval is not None:"],
                    [109, "                    retval = newretval"],
                    [110, "        return retval"]
                  ],
                  "symbolAddr": null,
                  "trust": null,
                  "symbol": null,
                  "rawFunction": null
                },
                {
                  "function": "rendered_content",
                  "errors": null,
                  "colNo": null,
                  "vars": {
                    "self": "<TemplateResponse status_code=200, \"text/html; charset=utf-8\">",
                    "template": "<django.template.backends.django.Template object at 0x7fc4b90a8880>",
                    "context": {
                      "view": "<errors.views.TemplateErrorView object at 0x7fc4b90a84c0>"
                    }
                  },
                  "package": null,
                  "absPath": "/usr/local/lib/python3.8/site-packages/django/template/response.py",
                  "inApp": false,
                  "lineNo": 83,
                  "module": "django.template.response",
                  "filename": "django/template/response.py",
                  "platform": null,
                  "instructionAddr": null,
                  "context": [
                    [
                      78,
                      "        response content, you must either call render(), or set the"
                    ],
                    [
                      79,
                      "        content explicitly using the value of this property."
                    ],
                    [80, "        \"\"\""],
                    [
                      81,
                      "        template = self.resolve_template(self.template_name)"
                    ],
                    [
                      82,
                      "        context = self.resolve_context(self.context_data)"
                    ],
                    [
                      83,
                      "        return template.render(context, self._request)"
                    ],
                    [84, ""],
                    [85, "    def add_post_render_callback(self, callback):"],
                    [86, "        \"\"\"Add a new post-rendering callback."],
                    [87, ""],
                    [88, "        If the response has already been rendered,"]
                  ],
                  "symbolAddr": null,
                  "trust": null,
                  "symbol": null,
                  "rawFunction": null
                },
                {
                  "function": "render",
                  "errors": null,
                  "colNo": null,
                  "vars": {
                    "self": "<django.template.backends.django.Template object at 0x7fc4b90a8880>",
                    "request": "<WSGIRequest: GET '/template-error/'>",
                    "context": "[{'True': True, 'False': False, 'None': None}, {}, {}, {'view': <errors.views.TemplateErrorView object at 0x7fc4b90a84c0>}]"
                  },
                  "package": null,
                  "absPath": "/usr/local/lib/python3.8/site-packages/django/template/backends/django.py",
                  "inApp": false,
                  "lineNo": 61,
                  "module": "django.template.backends.django",
                  "filename": "django/template/backends/django.py",
                  "platform": null,
                  "instructionAddr": null,
                  "context": [
                    [56, "        return self.template.origin"],
                    [57, ""],
                    [58, "    def render(self, context=None, request=None):"],
                    [
                      59,
                      "        context = make_context(context, request, autoescape=self.backend.engine.autoescape)"
                    ],
                    [60, "        try:"],
                    [61, "            return self.template.render(context)"],
                    [62, "        except TemplateDoesNotExist as exc:"],
                    [63, "            reraise(exc, self.backend)"],
                    [64, ""],
                    [65, ""],
                    [66, "def copy_exception(exc, backend=None):"]
                  ],
                  "symbolAddr": null,
                  "trust": null,
                  "symbol": null,
                  "rawFunction": null
                },
                {
                  "function": "render",
                  "errors": null,
                  "colNo": null,
                  "vars": {
                    "self": "<django.template.base.Template object at 0x7fc4b90a88e0>",
                    "context": "[{'True': True, 'False': False, 'None': None}, {}, {}, {'view': <errors.views.TemplateErrorView object at 0x7fc4b90a84c0>}]"
                  },
                  "package": null,
                  "absPath": "/usr/local/lib/python3.8/site-packages/django/template/base.py",
                  "inApp": false,
                  "lineNo": 171,
                  "module": "django.template.base",
                  "filename": "django/template/base.py",
                  "platform": null,
                  "instructionAddr": null,
                  "context": [
                    [
                      166,
                      "        \"Display stage -- can be called many times\""
                    ],
                    [
                      167,
                      "        with context.render_context.push_state(self):"
                    ],
                    [168, "            if context.template is None:"],
                    [169, "                with context.bind_template(self):"],
                    [
                      170,
                      "                    context.template_name = self.name"
                    ],
                    [171, "                    return self._render(context)"],
                    [172, "            else:"],
                    [173, "                return self._render(context)"],
                    [174, ""],
                    [175, "    def compile_nodelist(self):"],
                    [176, "        \"\"\""]
                  ],
                  "symbolAddr": null,
                  "trust": null,
                  "symbol": null,
                  "rawFunction": null
                },
                {
                  "function": "_render",
                  "errors": null,
                  "colNo": null,
                  "vars": {
                    "self": "<django.template.base.Template object at 0x7fc4b90a88e0>",
                    "context": "[{'True': True, 'False': False, 'None': None}, {}, {}, {'view': <errors.views.TemplateErrorView object at 0x7fc4b90a84c0>}]"
                  },
                  "package": null,
                  "absPath": "/usr/local/lib/python3.8/site-packages/django/template/base.py",
                  "inApp": false,
                  "lineNo": 163,
                  "module": "django.template.base",
                  "filename": "django/template/base.py",
                  "platform": null,
                  "instructionAddr": null,
                  "context": [
                    [158, "    def __iter__(self):"],
                    [159, "        for node in self.nodelist:"],
                    [160, "            yield from node"],
                    [161, ""],
                    [162, "    def _render(self, context):"],
                    [163, "        return self.nodelist.render(context)"],
                    [164, ""],
                    [165, "    def render(self, context):"],
                    [
                      166,
                      "        \"Display stage -- can be called many times\""
                    ],
                    [
                      167,
                      "        with context.render_context.push_state(self):"
                    ],
                    [168, "            if context.template is None:"]
                  ],
                  "symbolAddr": null,
                  "trust": null,
                  "symbol": null,
                  "rawFunction": null
                },
                {
                  "function": "render",
                  "errors": null,
                  "colNo": null,
                  "vars": {
                    "node": "<django.template.defaulttags.URLNode object at 0x7fc4b90a87c0>",
                    "bit": "'<a href=\"'",
                    "bits": ["'<a href=\"'"],
                    "self": [
                      "<TextNode: '<a href=\"'>",
                      "<django.template.defaulttags.URLNode object at 0x7fc4b90a87c0>",
                      "<TextNode: '\">'>"
                    ],
                    "context": "[{'True': True, 'False': False, 'None': None}, {}, {}, {'view': <errors.views.TemplateErrorView object at 0x7fc4b90a84c0>}]"
                  },
                  "package": null,
                  "absPath": "/usr/local/lib/python3.8/site-packages/django/template/base.py",
                  "inApp": false,
                  "lineNo": 936,
                  "module": "django.template.base",
                  "filename": "django/template/base.py",
                  "platform": null,
                  "instructionAddr": null,
                  "context": [
                    [931, ""],
                    [932, "    def render(self, context):"],
                    [933, "        bits = []"],
                    [934, "        for node in self:"],
                    [935, "            if isinstance(node, Node):"],
                    [
                      936,
                      "                bit = node.render_annotated(context)"
                    ],
                    [937, "            else:"],
                    [938, "                bit = node"],
                    [939, "            bits.append(str(bit))"],
                    [940, "        return mark_safe(''.join(bits))"],
                    [941, ""]
                  ],
                  "symbolAddr": null,
                  "trust": null,
                  "symbol": null,
                  "rawFunction": null
                },
                {
                  "function": null,
                  "errors": null,
                  "colNo": null,
                  "vars": null,
                  "package": null,
                  "absPath": "/code/errors/templates/template_error.html",
                  "inApp": true,
                  "lineNo": 1,
                  "module": null,
                  "filename": "/code/errors/templates/template_error.html",
                  "platform": null,
                  "instructionAddr": null,
                  "context": [
                    [1, "&lt;a href=&quot;{% url &#x27;nope&#x27; %}&quot;&gt;"]
                  ],
                  "symbolAddr": null,
                  "trust": null,
                  "symbol": null,
                  "rawFunction": null
                },
                {
                  "function": "render_annotated",
                  "errors": null,
                  "colNo": null,
                  "vars": {
                    "self": "<django.template.defaulttags.URLNode object at 0x7fc4b90a87c0>",
                    "context": "[{'True': True, 'False': False, 'None': None}, {}, {}, {'view': <errors.views.TemplateErrorView object at 0x7fc4b90a84c0>}]"
                  },
                  "package": null,
                  "absPath": "/usr/local/lib/python3.8/site-packages/django/template/base.py",
                  "inApp": false,
                  "lineNo": 903,
                  "module": "django.template.base",
                  "filename": "django/template/base.py",
                  "platform": null,
                  "instructionAddr": null,
                  "context": [
                    [
                      898,
                      "        rendering, the exception is annotated with contextual line information"
                    ],
                    [
                      899,
                      "        where it occurred in the template. For internal usage this method is"
                    ],
                    [
                      900,
                      "        preferred over using the render method directly."
                    ],
                    [901, "        \"\"\""],
                    [902, "        try:"],
                    [903, "            return self.render(context)"],
                    [904, "        except Exception as e:"],
                    [
                      905,
                      "            if context.template.engine.debug and not hasattr(e, 'template_debug'):"
                    ],
                    [
                      906,
                      "                e.template_debug = context.render_context.template.get_exception_info(e, self.token)"
                    ],
                    [907, "            raise"],
                    [908, ""]
                  ],
                  "symbolAddr": null,
                  "trust": null,
                  "symbol": null,
                  "rawFunction": null
                },
                {
                  "function": "render",
                  "errors": null,
                  "colNo": null,
                  "vars": {
                    "reverse": "<function reverse at 0x7fc4ba161820>",
                    "url": "''",
                    "self": "<django.template.defaulttags.URLNode object at 0x7fc4b90a87c0>",
                    "args": [],
                    "current_app": "''",
                    "view_name": "'nope'",
                    "context": "[{'True': True, 'False': False, 'None': None}, {}, {}, {'view': <errors.views.TemplateErrorView object at 0x7fc4b90a84c0>}]",
                    "kwargs": {},
                    "NoReverseMatch": "<class 'django.urls.exceptions.NoReverseMatch'>"
                  },
                  "package": null,
                  "absPath": "/usr/local/lib/python3.8/site-packages/django/template/defaulttags.py",
                  "inApp": false,
                  "lineNo": 443,
                  "module": "django.template.defaulttags",
                  "filename": "django/template/defaulttags.py",
                  "platform": null,
                  "instructionAddr": null,
                  "context": [
                    [438, "                current_app = None"],
                    [
                      439,
                      "        # Try to look up the URL. If it fails, raise NoReverseMatch unless the"
                    ],
                    [
                      440,
                      "        # {% url ... as var %} construct is used, in which case return nothing."
                    ],
                    [441, "        url = ''"],
                    [442, "        try:"],
                    [
                      443,
                      "            url = reverse(view_name, args=args, kwargs=kwargs, current_app=current_app)"
                    ],
                    [444, "        except NoReverseMatch:"],
                    [445, "            if self.asvar is None:"],
                    [446, "                raise"],
                    [447, ""],
                    [448, "        if self.asvar:"]
                  ],
                  "symbolAddr": null,
                  "trust": null,
                  "symbol": null,
                  "rawFunction": null
                },
                {
                  "function": "reverse",
                  "errors": null,
                  "colNo": null,
                  "vars": {
                    "current_path": "None",
                    "viewname": "'nope'",
                    "args": [],
                    "current_app": "''",
                    "prefix": "'/'",
                    "resolver": "<URLResolver 'django_error_factory.urls' (None:None) '^/'>",
                    "kwargs": {},
                    "path": [],
                    "urlconf": "'django_error_factory.urls'",
                    "view": "'nope'"
                  },
                  "package": null,
                  "absPath": "/usr/local/lib/python3.8/site-packages/django/urls/base.py",
                  "inApp": false,
                  "lineNo": 87,
                  "module": "django.urls.base",
                  "filename": "django/urls/base.py",
                  "platform": null,
                  "instructionAddr": null,
                  "context": [
                    [82, "                else:"],
                    [
                      83,
                      "                    raise NoReverseMatch(\"%s is not a registered namespace\" % key)"
                    ],
                    [84, "        if ns_pattern:"],
                    [
                      85,
                      "            resolver = get_ns_resolver(ns_pattern, resolver, tuple(ns_converters.items()))"
                    ],
                    [86, ""],
                    [
                      87,
                      "    return iri_to_uri(resolver._reverse_with_prefix(view, prefix, *args, **kwargs))"
                    ],
                    [88, ""],
                    [89, ""],
                    [90, "reverse_lazy = lazy(reverse, str)"],
                    [91, ""],
                    [92, ""]
                  ],
                  "symbolAddr": null,
                  "trust": null,
                  "symbol": null,
                  "rawFunction": null
                },
                {
                  "function": "_reverse_with_prefix",
                  "errors": null,
                  "colNo": null,
                  "vars": {
                    "patterns": [],
                    "_prefix": "'/'",
                    "self": "<URLResolver 'django_error_factory.urls' (None:None) '^/'>",
                    "args": [],
                    "m": "None",
                    "lookup_view_s": "'nope'",
                    "n": "None",
                    "possibilities": [],
                    "lookup_view": "'nope'",
                    "msg": "\"Reverse for 'nope' not found. 'nope' is not a valid view function or pattern name.\""
                  },
                  "package": null,
                  "absPath": "/usr/local/lib/python3.8/site-packages/django/urls/resolvers.py",
                  "inApp": false,
                  "lineNo": 677,
                  "module": "django.urls.resolvers",
                  "filename": "django/urls/resolvers.py",
                  "platform": null,
                  "instructionAddr": null,
                  "context": [
                    [672, "        else:"],
                    [673, "            msg = ("],
                    [
                      674,
                      "                \"Reverse for '%(view)s' not found. '%(view)s' is not \""
                    ],
                    [
                      675,
                      "                \"a valid view function or pattern name.\" % {'view': lookup_view_s}"
                    ],
                    [676, "            )"],
                    [677, "        raise NoReverseMatch(msg)"]
                  ],
                  "symbolAddr": null,
                  "trust": null,
                  "symbol": null,
                  "rawFunction": null
                }
              ],
              "framesOmitted": null,
              "registers": null,
              "hasSystemFrames": true
            },
            "module": "django.urls.exceptions",
            "rawStacktrace": null,
            "mechanism": { "type": "django", "handled": false },
            "threadId": null,
            "value": "Reverse for 'nope' not found. 'nope' is not a valid view function or pattern name.",
            "type": "NoReverseMatch"
          }
        ],
        "excOmitted": null,
        "hasSystemFrames": true
      }
    },
    {
      "type": "request",
      "data": {
        "fragment": null,
        "cookies": [],
        "inferredContentType": "text/plain",
        "env": { "SERVER_PORT": "8001", "SERVER_NAME": "210ecca56d59" },
        "headers": [
          [
            "Accept",
            "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"
          ],
          ["Accept-Encoding", "gzip, deflate"],
          ["Accept-Language", "en-US,en;q=0.5"],
          ["Connection", "keep-alive"],
          ["Content-Length", ""],
          ["Content-Type", "text/plain"],
          ["Dnt", "1"],
          ["Host", "localhost:8001"],
          ["Referer", "http://localhost:8001/"],
          ["Upgrade-Insecure-Requests", "1"],
          [
            "User-Agent",
            "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0"
          ]
        ],
        "url": "http://localhost:8001/template-error/",
        "query": [],
        "data": null,
        "method": "GET"
      }
    }
  ],
  "packages": {
    "toml": "0.10.0",
    "cffi": "1.13.2",
    "ipython-genutils": "0.2.0",
    "wheel": "0.33.6",
    "pygments": "2.5.2",
    "cleo": "0.7.6",
    "pip": "19.3.1",
    "prompt-toolkit": "3.0.2",
    "parso": "0.5.2",
    "jeepney": "0.4.2",
    "html5lib": "1.0.1",
    "appdirs": "1.4.3",
    "requests-toolbelt": "0.8.0",
    "regex": "2020.1.8",
    "pastel": "0.1.1",
    "msgpack": "0.6.2",
    "pexpect": "4.7.0",
    "sentry-sdk": "0.14.0",
    "ipdb": "0.12.3",
    "six": "1.13.0",
    "poetry": "1.0.0",
    "ptyprocess": "0.6.0",
    "click": "7.0",
    "jedi": "0.15.2",
    "traitlets": "4.3.3",
    "asgiref": "3.2.3",
    "cachy": "0.3.0",
    "pathspec": "0.7.0",
    "cachecontrol": "0.12.6",
    "certifi": "2019.11.28",
    "jsonschema": "3.2.0",
    "backcall": "0.1.0",
    "cryptography": "2.8",
    "sqlparse": "0.3.0",
    "pycparser": "2.19",
    "secretstorage": "3.1.1",
    "urllib3": "1.25.7",
    "webencodings": "0.5.1",
    "pytz": "2019.3",
    "clikit": "0.4.1",
    "ipython": "7.11.1",
    "lockfile": "0.12.2",
    "pickleshare": "0.7.5",
    "decorator": "4.4.1",
    "tomlkit": "0.5.8",
    "typed-ast": "1.4.0",
    "keyring": "19.3.0",
    "wcwidth": "0.1.8",
    "django": "3.0.2",
    "pyrsistent": "0.14.11",
    "pyparsing": "2.4.6",
    "pylev": "1.3.0",
    "chardet": "3.0.4",
    "setuptools": "44.0.0",
    "pkginfo": "1.5.0.1",
    "black": "19.10b0",
    "requests": "2.22.0",
    "shellingham": "1.3.1",
    "idna": "2.8",
    "attrs": "19.3.0"
  },
  "sdk": { "version": "0.14.0", "name": "sentry.python" },
  "_meta": {
    "user": null,
    "context": null,
    "entries": {
      "0": {
        "data": {
          "values": {
            "0": {
              "": null,
              "stacktrace": {
                "": null,
                "frames": {},
                "registers": null,
                "framesOmitted": null
              },
              "mechanism": null,
              "module": null,
              "value": null,
              "threadId": null,
              "type": null
            }
          }
        }
      }
    },
    "contexts": null,
    "message": null,
    "packages": null,
    "tags": {},
    "sdk": null
  },
  "contexts": {
    "browser": { "version": "72.0", "type": "browser", "name": "Firefox" },
    "runtime": {
      "version": "3.8.1",
      "type": "runtime",
      "build": "3.8.1 (default, Jan  3 2020, 22:55:55) \n[GCC 8.3.0]",
      "name": "CPython"
    },
    "trace": {
      "description": "django.middleware.clickjacking.XFrameOptionsMiddleware.__call__",
      "parent_span_id": "969696ce99d241b7",
      "trace_id": "054a97f6e65b4b00a4f44c7befe60632",
      "span_id": "91c32e43e3ca1f52",
      "type": "trace",
      "op": "django.middleware"
    },
    "client_os": { "type": "os", "name": "Ubuntu" }
  },
  "fingerprints": [
    "6c23e1847ab5bf6e4d9b040c4054ca67",
    "8b852c201d5235b712e30315ea1fdffa"
  ],
  "context": { "sys.argv": ["./manage.py", "runserver", "0.0.0.0:8001"] },
  "release": null,
  "groupID": "1435229148"
}
